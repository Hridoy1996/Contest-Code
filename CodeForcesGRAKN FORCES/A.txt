/*
T M Hridoy KUET CSE 15
*/
 
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define print cout<<"==================\n";
typedef    long long ll;
typedef pair<ll,ll   > payar;
typedef   unsigned long long ull;
/* Special functions:
 
        find_by_order(k) --> returns iterator to the kth largest element counting from 0
        order_of_key(val) --> returns the number of items in a set that are strictly smaller than our item
*/
///set
typedef tree<int,null_type,less<int>,rb_tree_tag,
        tree_order_statistics_node_update> indexed_set;
///multiset
typedef tree<payar,null_type,less<payar>,rb_tree_tag,
        tree_order_statistics_node_update>ordered_set;
///map
template<class key, class value, class cmp = std::less<key>>
using ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;
ordered_map<int, int> my_map;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define readf                freopen("in.txt", "r", stdin);
#define writef               freopen("out.txt", "w", stdout);
priority_queue<int, vector<int>,  greater<int> > aa,bb,both; ///accending
vector< pair<int,payar  > > vpp;
vector < payar >  vp,vp1;
#define pi acos(-1.0);
#define EPS 1e-9
#define  mod   1000000007
#define  modulo  1000000007
#define all(x)  x.begin(),x.end()
#define un(x)       x.erase(unique(all(x)), x.end())
#define endl "\n"
using namespace std;
const int M = 998244353;
#define mx 300005
const int N = 3e5+7;
 
 
int main()
{
    IOS;
 
    int t ;
    cin>>t;
    while(t--)
    {
        ll n ;
        cin>>n;
 
        ll a[n];
        ll b[n],c[n];
        for(int i = 0 ; i <n ; i++){
            cin>>a[i];
        }
        for(int i = 0 ; i <n ; i++){
            cin>>b[i];
        }
        for(int i = 0 ; i <n ; i++){
            cin>>c[i];
        }
        cout<<a[0];
        int prev = a[0];
        for(int i = 1; i <n-1 ;i++){
                if(a[i]!=prev){
                        cout<<" "<<a[i];
                        prev=a[i];
                }
                else if(b[i]!=prev){
                        cout<<" "<<b[i];
                        prev=b[i];
                }
                else if(c[i]!=prev){
                        cout<<" "<<c[i];
                        prev=c[i];
                }
        }
        if(n>1){
            for(int i = 0 ; i<1 ; i++){
                if(a[n-1]!=prev and a[n-1]!=a[0]){
                    cout<<" "<<a[n-1];
                }
                else if(b[n-1]!=prev and b[n-1]!=a[0]){
                    cout<<" "<<b[n-1];
                }
                else if(c[n-1]!=prev and c[n-1]!=a[0]){
                    cout<<" "<<c[n-1];
                }
            }
        }
        cout<<endl;
    }
 
return 0;
}