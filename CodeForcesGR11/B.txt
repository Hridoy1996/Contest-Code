/*
T M Hridoy KUET CSE 15
*/

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define print cout<<"==================\n";
typedef    long long ll;
typedef pair<ll,ll   > payar;
typedef   unsigned long long ull;
/* Special functions:

        find_by_order(k) --> returns iterator to the kth largest element counting from 0
        order_of_key(val) --> returns the number of items in a set that are strictly smaller than our item
*/
///set
typedef tree<int,null_type,less<int>,rb_tree_tag,
        tree_order_statistics_node_update> indexed_set;
///multiset
typedef tree<payar,null_type,less<payar>,rb_tree_tag,
        tree_order_statistics_node_update>ordered_set;
///map
template<class key, class value, class cmp = std::less<key>>
using ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;
ordered_map<int, int> my_map;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define readf                freopen("in.txt", "r", stdin);
#define writef               freopen("out.txt", "w", stdout);
priority_queue<int, vector<int>,  greater<int> > aa,bb,both; ///accending
vector< pair<int,payar  > > vpp;
vector < payar >  vp,vp1;
#define pi acos(-1.0);
#define EPS 1e-9
#define  mod   1000000007
#define  modulo  1000000007
#define all(x)  x.begin(),x.end()
#define un(x)       x.erase(unique(all(x)), x.end())
#define endl "\n"
using namespace std;
const int M = 998244353;
#define mx 300005
const int N = 3e5+7;


int main()
{
    IOS;

    int t ;
    cin>>t;
    cout<<fixed<<setprecision(15);
    while(t--)
    {

        int n, k ;
        cin>>n>>k;
        string s ;
        cin>>s;
        int tot=0;
        int ace = s[0] == 'L';

        for(int i = 0 ; i<n ; i++)
        {
            tot+= (s[i]=='L');
        }
        if(tot==n)
        {
            cout<<max(0,k*2-1)<<endl;
        }
        else
        {

            int pro = 0 ;
            int st=0;
            int e=n-1;
            for(int i = 0 ; i<n ; i++)
            {
                if(s[i]=='W')
                {
                    st=i;
                    break;
                }
                pro+= (s[i]=='L');

            }
            reverse(all(s));
            int sesh = 0;
            for(int i = 0 ; i<n ; i++)
            {
                if(s[i]=='W')
                {
                    e = n - i - 1;
                    break;
                }
                sesh+= (s[i]=='L');

            }
            reverse(all(s));

            vector<int>sz ;

            int lens = 0;

            for(int i = st ; i<e ; i++)
            {
                if(s[i]=='W')
                {
                    if(lens)
                        sz.push_back(lens);
                    lens = 0;
                }
                else
                {
                    lens++;
                }
            }
            if(lens)
            {
                sz.push_back(lens);
            }
//            for(auto &it:sz ){
//                cout<<it<<endl;
//            }
            sort(all(sz));
            ll ans = 0 ;
            ll prev='2';
            for(int i = 0 ; i<n ; i++)
            {
                if(s[i]=='W')
                {

                    if(prev=='W')
                    {
                        ans+=2;
                    }
                    else
                    {
                        ans+=1;
                    }
                }
                prev=s[i];

            }
            for(int i = 0 ; i < sz.size() ; i++)
            {
                if(k>=sz[i])
                {
                    k-=sz[i];
                    ans+=(sz[i]*2+1);
                }
                else
                {
                    ans+=(k*2);
                    k=0;
                    break;
                }

            }
            if(k and pro)
            {
                if(k>=pro)
                {
                    k-=pro;
                    ans+=(pro*2);
                }
                else
                {
                    ans+=(k*2);
                    k=0;

                }
            }
            if(k and sesh)
            {
                if(k>=sesh)
                {
                    k-=sesh;
                    ans+=(sesh*2);
                }
                else
                {
                    ans+=(k*2);
                    k=0;
                }
            }
            cout<<ans<<endl;
        }


    }
    return 0;
}
