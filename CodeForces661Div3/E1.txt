/*
T M Hridoy KUET CSE 15
*/
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define print cout<<"==================\n";
typedef    long long ll;
typedef pair<ll,ll   > payar;
typedef   unsigned long long ull;
/* Special functions:

        find_by_order(k) --> returns iterator to the kth largest element counting from 0
        order_of_key(val) --> returns the number of items in a set that are strictly smaller than our item
*/
///set
typedef tree<int,null_type,less<int>,rb_tree_tag,
        tree_order_statistics_node_update> indexed_set;
///multiset
typedef tree<payar,null_type,less<payar>,rb_tree_tag,
        tree_order_statistics_node_update>ordered_set;
///map
template<class key, class value, class cmp = std::less<key>>
using ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;
ordered_map<int, int> my_map;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define readf                freopen("in.txt", "r", stdin);
#define writef               freopen("out.txt", "w", stdout);
priority_queue<int, vector<int>,  greater<int> > aa,bb,both; ///accending
vector< pair<int,payar  > > vpp;
vector < payar >  vp,vp1;
#define pi acos(-1.0);
#define EPS 1e-9
#define  mod   1000000007
#define  modulo  1000000007
#define all(x)  x.begin(),x.end()
#define un(x)       x.erase(unique(all(x)), x.end())
#define endl "\n"

inline ll bits(ll arg,int posn)
{
    return ((arg) | (1 << (posn)));

}
inline ll bitc(ll arg, int posn)
{
    return ((arg) & ~(1 << (posn)));
}
const int N = 5e5+5;

ll s,n, wsum;
vector<payar>adj[N];
priority_queue<pair<ll,payar> >lagbe;
ll dfs(int u, int p )
{
    bool is_leaf = 1;
    int sum = 0 ;

   for(auto &it: adj[u]){
        ll v = it.first;
        ll w = it.second;;
        if(v==p)
            continue;

        is_leaf=0;
        ll tot_leaf = dfs(v,u);
        lagbe.push({w*tot_leaf-(w/2)*tot_leaf,{w,tot_leaf}});
        sum+=tot_leaf;
        wsum += w*tot_leaf;
    }
    return sum + is_leaf;
}
int main ()
{
    IOS;
    int t;
    cin>>t;
    while(t--)
    {
        cin>>n>>s;

        wsum = 0;

        for(int i=1; i<=n; ++i)
            adj[i].clear();

        lagbe = priority_queue<pair<ll, payar>>();

        for(int i=1; i<n; ++i)
        {
            int u, v;
            ll w;
            cin >> u >> v >> w;
            adj[u].emplace_back(v,w);
            adj[v].emplace_back(u,w);
        }
        ll emni = dfs(1,-1);


        ll ans = 0;

        while(wsum>s){
            pair<ll, payar> tmp = lagbe.top();
            ll x = tmp.second.first ;
            ll y = tmp.second.second;
            wsum -= x*y ;
            wsum += (x/2)*y;
            lagbe.pop();
            lagbe.push({(x/2)*y-((x/2)/2)*y,{(x/2),y}});
            ans++;
        }
        cout<<ans<<endl;
    }

    return 0;
}
